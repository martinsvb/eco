// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id          String    @id @default(uuid())
  iban        String    @unique
  number      String
  bic         String
  name        String
  currency    String
  description String?
  active      Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  creator     User      @relation(fields: [creatorId], references: [id])
  creatorId   String
  company     Company   @relation(fields: [companyId], references: [id])
  companyId   String
}

model Content {
  id          String    @id @default(uuid())
  title       String
  text        Json?
  dateTime    DateTime?
  type        String
  state       String?   @default("created")
  parentId    String?
  approvedBy  String[]  @default([])
  published   Boolean?  @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String
  company     Company   @relation(fields: [companyId], references: [id])
  companyId   String
}

model Contact {
  id               String    @id @default(uuid())
  name             String
  country          String
  ico              String?
  vat              String?
  address          String?
  email            String?
  phone            String?
  note             String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime? @updatedAt
  creator          User      @relation(fields: [creatorId], references: [id])
  creatorId        String
  company          Company   @relation(fields: [companyId], references: [id])
  companyId        String
}

model User {
  id               String    @id @default(uuid())
  name             String?
  picture          String?
  email            String    @unique
  isEmailConfirmed Boolean   @default(false)
  phone            String?
  origin           String
  otp              Int?
  password         String?
  rights           Json
  role             String
  note             String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime? @updatedAt
  accounts         Account[]
  content          Content[]
  Contact          Contact[]
  errors           Error[]
  company          Company  @relation(fields: [companyId], references: [id])
  companyId        String
}

model Company {
  id               String    @id @default(uuid())
  name             String    @unique
  country          String
  ico              String?   @unique
  vat              String?   @unique
  address          String?
  email            String?
  note             String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime? @updatedAt
  accounts         Account[]
  content          Content[]
  Contact          Contact[]
  users            User[]
  errors           Error[]
}

model Error {
  id               String    @id @default(uuid())
  dateTime         String
  name             String
  code             String?
  meta             Json?
  type             String?
  user             User?      @relation(fields: [userId], references: [id])
  userId           String?
  userName         String?
  email            String?
  isEmailConfirmed Boolean?
  role             String?
  company          Company?  @relation(fields: [companyId], references: [id])
  companyId        String?
  request          String?
  params           Json?
  body             Json?
  referer          String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime? @updatedAt
}
